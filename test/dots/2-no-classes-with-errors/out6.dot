graph {
    12 [label=5
       ,shape=box
       ,style=dashed];
    11 [label=5
       ,shape=box
       ,style=dashed];
    10 [label=applyTwice
       ,shape=box
       ,style=dashed];
    9 [label="result: Int"
      ,shape=box];
    8 [label=x
      ,shape=box
      ,style=dashed];
    7 [label=f
      ,shape=box
      ,style=dashed];
    6 [label=f
      ,shape=box
      ,style=dashed];
    5 [label="x: Int",shape=box];
    4 [label="x's Lambda Scope"
      ,shape=ellipse];
    3 [label="f: (Int -> Int)"
      ,shape=box];
    2 [label="f's Lambda Scope"
      ,shape=ellipse];
    1 [label="applyTwice: ((Int -> Int) -> (Int -> Int))"
      ,shape=box];
    0 [label="Global Scope"
      ,shape=ellipse];
    0 -- 12 [label=U,dir=back];
    0 -- 11 [label=U,dir=back];
    0 -- 10 [label=U,dir=back];
    0 -- 9 [label=D
           ,dir=forward
           ,arrowhead=dot];
    4 -- 8 [label=U,dir=back];
    4 -- 7 [label=U,dir=back];
    4 -- 6 [label=U,dir=back];
    4 -- 5 [label=D
           ,dir=forward
           ,arrowhead=dot];
    2 -- 4 [label=P,dir=back];
    2 -- 3 [label=D
           ,dir=forward
           ,arrowhead=dot];
    0 -- 2 [label=P,dir=back];
    0 -- 1 [label=D
           ,dir=forward
           ,arrowhead=dot];
}
